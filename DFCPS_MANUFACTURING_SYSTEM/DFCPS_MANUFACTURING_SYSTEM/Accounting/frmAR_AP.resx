<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="StatusStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>